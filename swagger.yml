---
swagger: '2.0'
info:
  description: 'API for Job Coordinator'
  version: 1.0.0
  title: Job Coordinator API

host: dummyhost
basePath: "/"
schemes:
- https

securityDefinitions:
  ApiKeyAuthorizer:
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: custom
    x-amazon-apigateway-authorizer:
      authorizerResultTtlInSeconds: 300
      authorizerUri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${arn_auth}/invocations
      type: token

paths:
  "/project/create":
    post:
      security:
        - ApiKeyAuthorizer: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${arn_create_project}/invocations
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
      summary: create a project
      description: ''
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        schema:
          Create:
            type: object
            required:
            - name
            - company
            properties:
              name:
                type: string
                example: projectname
              company:
                type: string
                example: mycompany
      responses:
        '200':
          headers:
            Access-Control-Allow-Origin:
              type: "string"
          description: successful operation
          schema:
            type: object
            properties:
              project_id: 
                type: string
                example: "someprojectid"

  "/project/{project_id}/job/create":
    post:
      security:
        - ApiKeyAuthorizer: []
      x-amazon-apigateway-auth: 
        type: NONE
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${arn_create_job}/invocations
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
      summary: create a job
      description: ''
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: project_id
        in: path
        type: string
        example: myproject
      - name: body
        in: body
        required: true
        schema:
          Create:
            type: object
            required:
            - name
            - company
            properties:
              name:
                type: string
                example: projectname
              company:
                type: string
                example: companyname
      responses:
        '200':
          headers:
            Access-Control-Allow-Origin:
              type: "string"
          description: successful operation
          schema:
            type: object
            properties:
              job_id: 
                type: string
                example: "somejobid"
  "/project/{project_id}/job":          
    get:
      security:
        - ApiKeyAuthorizer: []
      x-amazon-apigateway-auth: 
        type: NONE
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${arn_get_jobs}/invocations
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
      summary: returns all jobs for a project
      description: ''
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: successful operation
          headers:
            Access-Control-Allow-Origin:
              type: "string"
          schema:
            type: array
            items: 
              type: object
              properties:
                company: 
                  type: string
                  example: somecommpany
                name:
                  type: string
                  example: someproject
                id:
                  type: string
                  example: someid
                project_id:
                  type: string
                  example: someprojectid
  
  "/job/{job_id}/start":
    post:
      security:
        - ApiKeyAuthorizer: []
      x-amazon-apigateway-auth: 
        type: NONE
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${arn_start_job}/invocations
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
      summary: updates job status
      description: ''
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: job_id
        in: path
        type: string
        example: myproject
      responses:
        '200':
          headers:
            Access-Control-Allow-Origin:
              type: "string"
          description: successful operation
          schema:
            type: object
            properties:
              job_run_id: 
                type: string
                example: "somejobrunid"

  "/job/{job_id}/run/{job_run_id}/finish":
    post:
      security:
        - ApiKeyAuthorizer: []
      x-amazon-apigateway-auth: 
        type: NONE
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${arn_finish_job}/invocations
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
      summary: stops job status
      description: ''
      consumes:
      - application/json
      produces:
      - application/json
      parameters: 
      - name: job_run_id
        in: path
        type: string
        example: myjobrun
      - name: job_id
        in: path
        type: string
        example: myjob
      
      - name: body
        in: body
        required: true
        schema:
          Create:
            type: object
            required:
              - job_status
            type: object
            parameters:
              job_status:
                type: string
                example: SUCCESS

      responses:
        '200':
          headers:
            Access-Control-Allow-Origin:
              type: "string"
          description: successful operation
          schema:
            type: object
            properties:
              job_run_id: 
                type: string
                example: "somejobrunid"       
  "/job/{job_id}/run/{job_run_id}":  
    get:
      security:
        - ApiKeyAuthorizer: []
      x-amazon-apigateway-auth: 
        type: NONE
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${arn_get_job_status}/invocations
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
      summary: returns status for job run
      description: ''
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: job_run_id
        in: path
        type: string
        example: somejobrunid
      - name: job_id
        in: path
        type: string
        example: myjob
      responses:
        '200':
          description: successful operation
          headers:
            Access-Control-Allow-Origin:
              type: "string"
          schema:
            type: object
            properties:
              company: 
                type: string
                example: somecommpany
              id:
                type: string
                example: someid
              job_id:
                type: string
                example: somejobid
              start_time:
                type: string
              end_time:
                type: string
              job_status:
                type: string
                example: IN_PROGRESS

              